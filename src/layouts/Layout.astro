---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@/components/BaseHead.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { useTranslations, type UiType } from "@/i18n/utils";
import { ModeToggle } from '@/components/theme';
type Props = CollectionEntry<"blog">["data"];

const { title, description, lang } =
  Astro.props;

const t = useTranslations(lang as UiType);
---
<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>
<!doctype html>
<html lang={lang} class="bg-background text-foreground">
  <head>
    <BaseHead lang={lang} title={title} description={description} />
  </head>
  <body>
    <Header title={t("site.title")} lang={lang} />
    <main>
		<slot />
	</main>
    <Footer />
  </body>
</html>
